@namespace MatBlazor
@typeparam TValue
@inherits BaseMatSlider<TValue>


<div @ref="Ref" class="@ClassMapper.AsString()" style="@StyleMapper.AsString()" id="@Id" @attributes="@Attributes">
    <input class="mdc-slider__input" type="range" min="@ValueMin" max="@ValueMax" value="@CurrentValue?.ToString()" aria-label="@Label" step="@(Discrete ? Step?.ToString() : null)" disabled="@Disabled" id="@InputId" @ref="@InputRef" @attributes="@InputAttributes">
    <div class="mdc-slider__track">
        <div class="mdc-slider__track--inactive"></div>
        <div class="mdc-slider__track--active">
            <div class="mdc-slider__track--active_fill"></div>
        </div>


        @if (Discrete && Markers)
        {
            <div class="mdc-slider__tick-marks">
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--active"></div>
                <div class="mdc-slider__tick-mark--inactive"></div>
                <div class="mdc-slider__tick-mark--inactive"></div>
                <div class="mdc-slider__tick-mark--inactive"></div>
                <div class="mdc-slider__tick-mark--inactive"></div>
                <div class="mdc-slider__tick-mark--inactive"></div>
            </div>
        }


    </div>

    <div class="mdc-slider__thumb">
        @if (Discrete)
        {
            <div class="mdc-slider__value-indicator-container" aria-hidden="true">
                <div class="mdc-slider__value-indicator">
                    <span class="mdc-slider__value-indicator-text">
                        @CurrentValue
                    </span>
                </div>
            </div>
        }
        <div class="mdc-slider__thumb-knob"></div>
    </div>
</div>


@* <div @ref="Ref" class="@ClassMapper.AsString()" style="@StyleMapper.AsString()" tabindex="0" role="slider" *@
@*       aria-valuemin="@ValueMin" aria-valuemax="@ValueMax" aria-valuenow="@Value" *@
@*       data-step="@(EnableStep ? Step?.ToString() : null)" aria-label="@Label" aria-disabled="@Disabled" *@
@*       @attributes="Attributes" Id="@Id"> *@
@*     <div class="mdc-slider__track-container"> *@
@*         <div class="mdc-slider__track"></div> *@
@*         @if (Discrete && Markers) *@
@*         { *@
@*             <div class="mdc-slider__track-marker-container" *@
@*                  style="@MarkerStyle"> *@
@*             </div> *@
@*         } *@
@*     </div> *@
@* *@
@*     <div class="mdc-slider__thumb-container"> *@
@*         @if (Pin) *@
@*         { *@
@*             <div class="mdc-slider__pin"> *@
@*                 <span class="mdc-slider__pin-value-marker">@Value</span> *@
@*             </div> *@
@*         } *@
@*         <svg class="mdc-slider__thumb" width="21" height="21"> *@
@*             <circle cx="10.5" cy="10.5" r="7.875"></circle> *@
@*         </svg> *@
@*         <div class="mdc-slider__focus-ring"></div> *@
@*     </div> *@
@* </div> *@